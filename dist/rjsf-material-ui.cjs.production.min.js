'use strict';
function e(e) {
  return e && 'object' == typeof e && 'default' in e ? e.default : e;
}
var t = require('react-jsonschema-form'),
  r = e(require('react')),
  i = require('react-jsonschema-form/lib/utils'),
  n = e(require('@material-ui/core/Box')),
  a = e(require('@material-ui/core/Grid')),
  l = e(require('@material-ui/core/Paper')),
  u = e(require('@material-ui/core/Button')),
  o = e(require('@material-ui/icons/Add')),
  c = e(require('@material-ui/icons/ArrowUpward')),
  d = e(require('@material-ui/icons/ArrowDownward')),
  m = e(require('@material-ui/icons/Remove')),
  s = e(require('@material-ui/core/Typography')),
  f = e(require('@material-ui/core/List')),
  p = e(require('@material-ui/core/ListItem')),
  v = e(require('@material-ui/core/ListItemIcon')),
  h = e(require('@material-ui/icons/Error')),
  E = e(require('@material-ui/core/ListItemText')),
  b = require('@material-ui/styles'),
  g = e(require('@material-ui/core/Divider')),
  y = e(require('@material-ui/core/FormControl')),
  q = e(require('@material-ui/core/FormHelperText')),
  F = e(require('@material-ui/core/Checkbox')),
  x = e(require('@material-ui/core/FormControlLabel')),
  O = e(require('@material-ui/core/FormLabel')),
  C = e(require('@material-ui/core/FormGroup')),
  k = e(require('@material-ui/core/Input')),
  S = e(require('@material-ui/core/InputLabel')),
  w = e(require('@material-ui/core/Radio')),
  T = e(require('@material-ui/core/RadioGroup')),
  W = e(require('@material-ui/core/Slider')),
  B = e(require('@material-ui/core/MenuItem')),
  D = e(require('@material-ui/core/Select')),
  V = e(require('@material-ui/core/TextField'));
function j() {
  return (j =
    Object.assign ||
    function(e) {
      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var i in r)
          Object.prototype.hasOwnProperty.call(r, i) && (e[i] = r[i]);
      }
      return e;
    }).apply(this, arguments);
}
function I(e) {
  if (null == e) throw new TypeError('Cannot destructure undefined');
}
var N = function(e) {
    return r.createElement(
      u,
      Object.assign({}, e, { color: 'secondary' }),
      r.createElement(o, null),
      ' Add Item'
    );
  },
  R = {
    remove: r.createElement(m, null),
    plus: r.createElement(o, null),
    'arrow-up': r.createElement(c, null),
    'arrow-down': r.createElement(d, null),
  },
  L = function(e) {
    var t = e.icon,
      i = (function(e, t) {
        if (null == e) return {};
        var r,
          i,
          n = {},
          a = Object.keys(e);
        for (i = 0; i < a.length; i++)
          t.indexOf((r = a[i])) >= 0 || (n[r] = e[r]);
        return n;
      })(e, ['icon', 'className']);
    return r.createElement(u, Object.assign({}, i, { size: 'small' }), R[t]);
  },
  M = function(e) {
    var t = e.title;
    return t
      ? r.createElement(e.TitleField, {
          id: e.idSchema.$id + '__title',
          title: t,
          required: e.required,
        })
      : r.createElement('div', null);
  },
  $ = function(e) {
    var t = e.description;
    return t
      ? r.createElement(e.DescriptionField, {
          id: e.idSchema.$id + '__description',
          description: t,
        })
      : r.createElement('div', null);
  },
  A = function(e) {
    var t = { flex: 1, paddingLeft: 6, paddingRight: 6, fontWeight: 'bold' };
    return r.createElement(
      a,
      { container: !0, key: e.index, alignItems: 'center' },
      r.createElement(
        a,
        { item: !0, xs: !0 },
        r.createElement(
          n,
          { mb: 2 },
          r.createElement(
            l,
            { elevation: 2 },
            r.createElement(n, { p: 2 }, e.children)
          )
        )
      ),
      e.hasToolbar &&
        r.createElement(
          a,
          { item: !0 },
          (e.hasMoveUp || e.hasMoveDown) &&
            r.createElement(L, {
              icon: 'arrow-up',
              className: 'array-item-move-up',
              tabIndex: -1,
              style: t,
              disabled: e.disabled || e.readonly || !e.hasMoveUp,
              onClick: e.onReorderClick(e.index, e.index - 1),
            }),
          (e.hasMoveUp || e.hasMoveDown) &&
            r.createElement(L, {
              icon: 'arrow-down',
              tabIndex: -1,
              style: t,
              disabled: e.disabled || e.readonly || !e.hasMoveDown,
              onClick: e.onReorderClick(e.index, e.index + 1),
            }),
          e.hasRemove &&
            r.createElement(L, {
              icon: 'remove',
              tabIndex: -1,
              style: t,
              disabled: e.disabled || e.readonly,
              onClick: e.onDropIndexClick(e.index),
            })
        )
    );
  },
  P = function(e) {
    return r.createElement(
      'fieldset',
      { className: e.className },
      r.createElement(M, {
        key: 'array-field-title-' + e.idSchema.$id,
        TitleField: e.TitleField,
        idSchema: e.idSchema,
        title: e.uiSchema['ui:title'] || e.title,
        required: e.required,
      }),
      (e.uiSchema['ui:description'] || e.schema.description) &&
        r.createElement(
          'div',
          {
            className: 'field-description',
            key: 'field-description-' + e.idSchema.$id,
          },
          e.uiSchema['ui:description'] || e.schema.description
        ),
      r.createElement(
        'div',
        {
          className: 'row array-item-list',
          key: 'array-item-list-' + e.idSchema.$id,
        },
        e.items && e.items.map(A)
      ),
      e.canAdd &&
        r.createElement(N, {
          className: 'array-item-add',
          onClick: e.onAddClick,
          disabled: e.disabled || e.readonly,
        })
    );
  },
  U = function(e) {
    return r.createElement(
      l,
      { elevation: 2 },
      r.createElement(
        n,
        { p: 2 },
        r.createElement(M, {
          key: 'array-field-title-' + e.idSchema.$id,
          TitleField: e.TitleField,
          idSchema: e.idSchema,
          title: e.uiSchema['ui:title'] || e.title,
          required: e.required,
        }),
        (e.uiSchema['ui:description'] || e.schema.description) &&
          r.createElement($, {
            key: 'array-field-description-' + e.idSchema.$id,
            DescriptionField: e.DescriptionField,
            idSchema: e.idSchema,
            description: e.uiSchema['ui:description'] || e.schema.description,
          }),
        r.createElement(
          a,
          { container: !0, key: 'array-item-list-' + e.idSchema.$id },
          e.items &&
            e.items.map(function(e) {
              return A(e);
            }),
          e.canAdd &&
            r.createElement(
              a,
              { container: !0, justify: 'flex-end' },
              r.createElement(
                a,
                { item: !0 },
                r.createElement(
                  n,
                  { mt: 2 },
                  r.createElement(N, {
                    className: 'array-item-add',
                    onClick: e.onAddClick,
                    disabled: e.disabled || e.readonly,
                  })
                )
              )
            )
        )
      )
    );
  },
  _ = b.makeStyles({ root: { marginTop: 5 } }),
  G = {
    DescriptionField: function(e) {
      var t = e.description;
      if (t) {
        var i = _();
        return r.createElement(
          s,
          { variant: 'subtitle2', className: i.root },
          t
        );
      }
      return null;
    },
    TitleField: function(e) {
      return r.createElement(
        r.Fragment,
        null,
        r.createElement(
          n,
          { mb: 1, mt: 1 },
          r.createElement(s, { variant: 'h5' }, e.title),
          r.createElement(g, null)
        )
      );
    },
  },
  H = function(e) {
    var t = e.id,
      i = e.rawErrors,
      n = void 0 === i ? [] : i,
      a = e.rawHelp,
      l = e.rawDescription,
      u = e.formContext,
      o = r.createElement(
        y,
        {
          fullWidth: !0,
          error: !!n.length,
          variant: u.muiOptions && u.muiOptions.fieldVariant,
        },
        e.children,
        e.displayLabel && l
          ? r.createElement(
              s,
              { variant: 'caption', color: 'textSecondary' },
              l
            )
          : null,
        n.length > 0 &&
          r.createElement(
            f,
            { dense: !0 },
            n.map(function(e, i) {
              return r.createElement(
                p,
                { key: i },
                r.createElement(q, { id: t }, '- ', e)
              );
            })
          ),
        a && r.createElement(q, { id: t }, a)
      );
    return u.muiOptions && u.muiOptions.theme
      ? r.createElement(b.ThemeProvider, { theme: u.muiOptions.theme }, o)
      : o;
  },
  z = b.makeStyles({ root: { marginTop: 10 } }),
  J = function(e) {
    var t = e.DescriptionField,
      i = e.description,
      n = e.TitleField,
      l = e.title,
      u = e.properties,
      o = e.required,
      c = e.uiSchema,
      d = e.idSchema,
      m = z();
    return r.createElement(
      r.Fragment,
      null,
      (c['ui:title'] || l) &&
        r.createElement(n, { id: d.$id + '-title', title: l, required: o }),
      i && r.createElement(t, { id: d.$id + '-description', description: i }),
      r.createElement(
        a,
        { container: !0, spacing: 2, className: m.root },
        u.map(function(e, t) {
          return r.createElement(
            a,
            { item: !0, xs: 12, key: t, style: { marginBottom: '10px' } },
            e.content
          );
        })
      )
    );
  },
  K = new Set(['number', 'integer']),
  Q = function(e, t) {
    var r = e.type,
      n = e.items;
    if ('' !== t) {
      if ('array' === r && n && K.has(n.type)) return t.map(i.asNumber);
      if ('boolean' === r) return 'true' === t;
      if ('number' === r) return i.asNumber(t);
      if (e.enum) {
        if (
          e.enum.every(function(e) {
            return 'number' === i.guessType(e);
          })
        )
          return i.asNumber(t);
        if (
          e.enum.every(function(e) {
            return 'boolean' === i.guessType(e);
          })
        )
          return 'true' === t;
      }
      return t;
    }
  },
  X = {
    CheckboxWidget: function(e) {
      var t = e.id,
        i = e.value,
        n = e.required,
        a = e.label,
        l = e.onChange,
        u = e.onBlur,
        o = e.onFocus,
        c = e.formContext;
      return r.createElement(
        y,
        {
          fullWidth: !0,
          required: n,
          variant: c.muiOptions && c.muiOptions.fieldVariant,
        },
        r.createElement(x, {
          control: r.createElement(F, {
            id: t,
            checked: void 0 !== i && i,
            required: n,
            disabled: e.disabled || e.readonly,
            autoFocus: e.autofocus,
            onChange: function(e, t) {
              return I(e), l(t);
            },
            onBlur: function(e) {
              return u(t, e.target.value);
            },
            onFocus: function(e) {
              return o(t, e.target.value);
            },
          }),
          label: a,
        })
      );
    },
    CheckboxesWidget: function(e) {
      var t = e.id,
        i = e.disabled,
        n = e.options,
        a = e.value,
        l = e.autofocus,
        u = e.readonly,
        o = e.onChange,
        c = e.onBlur,
        d = e.onFocus,
        m = e.formContext,
        s = n.enumOptions,
        f = n.enumDisabled,
        p = function(e) {
          return function(t) {
            var r = t.target.checked,
              i = s.map(function(e) {
                return e.value;
              });
            o(
              r
                ? (function(e, t, r) {
                    var i = r.indexOf(e);
                    return t
                      .slice(0, i)
                      .concat(e, t.slice(i))
                      .sort(function(e, t) {
                        return r.indexOf(e) > r.indexOf(t);
                      });
                  })(e.value, a, i)
                : (function(e, t) {
                    return t.filter(function(t) {
                      return t !== e;
                    });
                  })(e.value, a)
            );
          };
        },
        v = function(e) {
          return c(t, e.target.value);
        },
        h = function(e) {
          return d(t, e.target.value);
        };
      return r.createElement(
        y,
        {
          fullWidth: !0,
          required: e.required,
          variant: m.muiOptions && m.muiOptions.fieldVariant,
        },
        r.createElement(O, { htmlFor: t }, e.label || e.schema.title),
        r.createElement(
          C,
          null,
          s.map(function(e, n) {
            var o = -1 !== a.indexOf(e.value),
              c = f && -1 != f.indexOf(e.value),
              d = r.createElement(F, {
                id: t + '_' + n,
                checked: o,
                disabled: i || c || u,
                autoFocus: l && 0 === n,
                onChange: p(e),
                onBlur: v,
                onFocus: h,
              });
            return r.createElement(x, { control: d, key: n, label: e.label });
          })
        )
      );
    },
    PasswordWidget: function(e) {
      var t = e.id,
        i = e.required,
        n = e.readonly,
        a = e.disabled,
        l = e.value,
        u = e.onFocus,
        o = e.onBlur,
        c = e.onChange,
        d = e.options,
        m = e.autofocus,
        s = e.formContext;
      return r.createElement(
        y,
        {
          fullWidth: !0,
          required: i,
          variant: s.muiOptions && s.muiOptions.fieldVariant,
        },
        r.createElement(S, null, e.label || e.schema.title),
        r.createElement(k, {
          autoFocus: m,
          required: i,
          disabled: a || n,
          type: 'password',
          value: l || '',
          onFocus: function(e) {
            return u(t, e.target.value);
          },
          onBlur: function(e) {
            return o(t, e.target.value);
          },
          onChange: function(e) {
            var t = e.target.value;
            return c('' === t ? d.emptyValue : t);
          },
        })
      );
    },
    RadioWidget: function(e) {
      var t = e.id,
        i = e.schema,
        n = e.options,
        a = e.value,
        l = e.required,
        u = e.disabled,
        o = e.readonly,
        c = e.label,
        d = e.onChange,
        m = e.onBlur,
        s = e.onFocus,
        f = e.formContext,
        p = Math.random().toString(),
        v = n.enumOptions,
        h = n.enumDisabled,
        E = !!n && n.inline;
      return r.createElement(
        y,
        {
          fullWidth: !0,
          required: l,
          variant: f.muiOptions && f.muiOptions.fieldVariant,
        },
        r.createElement(O, { htmlFor: t }, c || i.title),
        r.createElement(
          T,
          {
            name: p,
            value: '' + a,
            row: E,
            onChange: function(e, t) {
              return I(e), d('boolean' == i.type ? 'false' !== t : t);
            },
            onBlur: function(e) {
              return m(t, e.target.value);
            },
            onFocus: function(e) {
              return s(t, e.target.value);
            },
          },
          v.map(function(e, t) {
            var i = h && -1 != h.indexOf(e.value);
            return r.createElement(x, {
              control: r.createElement(w, { color: 'primary', key: t }),
              label: '' + e.label,
              value: '' + e.value,
              key: t,
              disabled: u || i || o,
            });
          })
        )
      );
    },
    RangeWidget: function(e) {
      var t = e.readonly,
        n = e.disabled,
        l = e.onBlur,
        u = e.onFocus,
        o = e.options,
        c = e.formContext,
        d = e.onChange,
        m = e.required,
        s = e.label,
        f = e.id,
        p = j({ value: e.value, label: s, id: f }, i.rangeSpec(e.schema));
      return r.createElement(
        a,
        { container: !0, alignItems: 'flex-end' },
        r.createElement(
          y,
          {
            fullWidth: !0,
            required: m,
            variant: c.muiOptions && c.muiOptions.fieldVariant,
          },
          r.createElement(O, { id: f }, s),
          r.createElement(
            W,
            Object.assign({}, p, {
              disabled: n || t,
              onChange: function(e, t) {
                return I(e), d('' === t ? o.emptyValue : t);
              },
              onBlur: function(e) {
                return l(f, e.target.value);
              },
              onFocus: function(e) {
                return u(f, e.target.value);
              },
            })
          )
        )
      );
    },
    SelectWidget: function(e) {
      var t = e.schema,
        i = e.id,
        n = e.options,
        a = e.label,
        l = e.required,
        u = e.disabled,
        o = e.readonly,
        c = e.value,
        d = e.multiple,
        m = e.autofocus,
        s = e.onChange,
        f = e.onFocus,
        p = e.onBlur,
        v = e.formContext,
        h = n.enumOptions,
        E = n.enumDisabled,
        b = d ? [] : '',
        g = f
          ? function(e) {
              return f(i, Q(t, e.target.value));
            }
          : void 0,
        q = r.useRef(null),
        F = r.useState(0),
        x = F[0],
        O = F[1];
      return (
        r.useEffect(function() {
          q && q.current && O(q.current.offsetWidth);
        }, []),
        r.createElement(
          y,
          {
            fullWidth: !0,
            required: l,
            variant: v.muiOptions && v.muiOptions.fieldVariant,
          },
          r.createElement(S, { htmlFor: i, ref: q }, a || t.title),
          r.createElement(
            D,
            {
              multiple: void 0 !== d && d,
              value: void 0 === c ? b : c,
              required: l,
              inputProps: { id: i },
              labelWidth: x,
              disabled: u || o,
              autoFocus: m,
              onChange: function(e) {
                return s(Q(t, e.target.value));
              },
              onBlur: function(e) {
                return p(i, Q(t, e.target.value));
              },
              onFocus: g,
            },
            h.map(function(e, t) {
              var i = e.value,
                n = e.label,
                a = E && -1 != E.indexOf(i);
              return r.createElement(B, { key: t, value: i, disabled: a }, n);
            })
          )
        )
      );
    },
    TextareaWidget: function(e) {
      var t = e.id,
        i = e.required,
        n = e.onBlur,
        a = e.onFocus,
        l = e.onChange,
        u = e.options,
        o = e.formContext;
      return r.createElement(
        y,
        {
          fullWidth: !0,
          required: i,
          variant: o.muiOptions && o.muiOptions.fieldVariant,
        },
        r.createElement(V, {
          id: t,
          label: e.label || e.schema.title,
          placeholder: e.placeholder,
          disabled: e.disabled || e.readonly,
          value: e.value,
          required: i,
          autoFocus: e.autofocus,
          multiline: !0,
          rows: u.rows || 5,
          onChange: function(e) {
            var t = e.target.value;
            return l('' === t ? u.emptyValue : t);
          },
          onBlur: function(e) {
            return n(t, e.target.value);
          },
          onFocus: function(e) {
            return a(t, e.target.value);
          },
          variant: o.muiOptions && o.muiOptions.fieldVariant,
        })
      );
    },
    TextWidget: function(e) {
      var t = e.id,
        i = e.required,
        n = e.onChange,
        a = e.onBlur,
        l = e.onFocus,
        u = e.options,
        o = e.schema,
        c = e.formContext;
      return r.createElement(
        y,
        { fullWidth: !0, required: i },
        r.createElement(V, {
          id: t,
          label: e.label || o.title,
          autoFocus: e.autofocus,
          required: i,
          disabled: e.disabled || e.readonly,
          type: o.type,
          value: e.value || '',
          onChange: function(e) {
            var t = e.target.value;
            return n('' === t ? u.emptyValue : t);
          },
          onBlur: function(e) {
            return a(t, e.target.value);
          },
          onFocus: l
            ? function(e) {
                return l(t, e.target.value);
              }
            : void 0,
          variant: c.muiOptions && c.muiOptions.fieldVariant,
        })
      );
    },
    UpDownWidget: function(e) {
      var t = e.id,
        i = e.required,
        n = e.readonly,
        a = e.disabled,
        l = e.value,
        u = e.onChange,
        o = e.onBlur,
        c = e.onFocus,
        d = e.autofocus,
        m = e.formContext;
      return r.createElement(
        y,
        {
          fullWidth: !0,
          required: i,
          variant: m.muiOptions && m.muiOptions.fieldVariant,
        },
        r.createElement(S, null, e.label),
        r.createElement(k, {
          id: t,
          autoFocus: d,
          required: i,
          type: 'number',
          disabled: a || n,
          name: name,
          value: l || '',
          onChange: function(e) {
            return u(e.target.value);
          },
          onBlur: function(e) {
            return o(t, e.target.value);
          },
          onFocus: function(e) {
            return c(t, e.target.value);
          },
        })
      );
    },
  },
  Y = i.getDefaultRegistry(),
  Z = Y.widgets,
  ee = {
    ArrayFieldTemplate: function(e) {
      var t = e.schema,
        n = e.registry,
        a = void 0 === n ? i.getDefaultRegistry() : n;
      return i.isMultiSelect(t, a.definitions)
        ? r.createElement(P, Object.assign({}, e))
        : r.createElement(U, Object.assign({}, e));
    },
    fields: j({}, Y.fields, {}, G),
    FieldTemplate: H,
    ObjectFieldTemplate: J,
    widgets: j({}, Z, {}, X),
    ErrorList: function(e) {
      var t = e.errors;
      return r.createElement(
        l,
        { elevation: 2 },
        r.createElement(
          n,
          { mb: 2, p: 2 },
          r.createElement(s, { variant: 'h6', component: 'h6' }, 'Errors'),
          r.createElement(
            f,
            { dense: !0 },
            t.map(function(e, t) {
              return r.createElement(
                p,
                { key: t },
                r.createElement(
                  v,
                  null,
                  r.createElement(h, { color: 'error' })
                ),
                r.createElement(E, { primary: e.stack })
              );
            })
          )
        )
      );
    },
  },
  te = t.withTheme(ee);
(exports.FieldTemplate = H),
  (exports.Fields = G),
  (exports.MuiForm = te),
  (exports.ObjectFieldTemplate = J),
  (exports.Theme = ee),
  (exports.Widgets = X),
  (exports.default = te);
//# sourceMappingURL=rjsf-material-ui.cjs.production.min.js.map
